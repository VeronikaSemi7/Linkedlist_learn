class Person:
    def __init__(self, name):
        self.name = name
        self.parents = []
        self.children = []

class Family:
    def __init__(self, root):
        self.root = root

class Node:
    def __init__(self, n):
        self.value = n
        self.next = None

class LinkedList:
    def __init__(self, nd=None):
        self.head = nd

    def add(self, nd):
        if not self.head:
            self.head = nd
            return
        h = self.head
        while h.next:
            h = h.next
        h.next = nd

    def printout(self):
        h = self.head 
        while h:
            print(h.value)
            h = h.next

    def nullify(self):
        a = self.head
        while a:
             a.value = 0
             a = a.next

    def print_value(self, n):
        s = self.head
        i = 1
        if n <= 0 :
            print('Wrong value') 
            return

        while s:
            if i == n :
                print(s.value) 
                return 
            i += 1 
            s = s.next
        print('Wrong value')

    def len(self):
        s = self.head
        l = 0
        while s :
          l +=1
          s = s.next
        return l

    def pop(self):
        # находим предпоследний элемент , у него делаем el.next=None
        s = self.head
        while s:
            while s.next.next:
                s = s.next
            s.next = None
            return

    def push_front(self, nd):
        s = self.head
        self.head = nd 
        nd.next = s

    def pop_front(self):
        # достает первый элемент и выкидывает
        s = self.head
        self.head = s.next
        s.next = None

    def push(self, nd, n):
        s = self.head
        i = 1
        while s:
            if i == n:
                t = s.next
                s.next = nd
                nd.next = t
                break
            i +=1
            s = s.next
        

    def delete(self, n):
        s = self.head
        i = 1 
        while s:
            if n == i + 1:
                t = s.next.next
                s.next = None
                s.next = t
                break 
            s = s.next
            i +=1 

   

ll = LinkedList()
ll.add(Node(22))
ll.add(Node(43))
ll.add(Node(72))
ll.add(Node(145))
ll.push_front(Node(23))
ll.pop_front()
#ll.printout()
ll.push(Node(13), 3)
#ll.printout()
#ll.print_value(4)
ll.delete(3)
ll.printout()

ll = LinkedList(Node(22))
